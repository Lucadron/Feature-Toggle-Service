// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Tenant model
model Tenant {
  id        String   @id @default(cuid())
  name      String   @unique
  apiKey    String   @unique
  apiSecret String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  featureFlags FeatureFlag[]
  auditLogs    AuditLog[]
}

// Feature model
model Feature {
  id          String   @id @default(cuid())
  name        String   @unique
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  featureFlags FeatureFlag[]
}

enum EvaluationStrategy {
  BOOLEAN 
  PERCENTAGE
  USER
}

enum Environment {
  dev
  staging
  prod
}

model FeatureFlag {
  id        String   @id @default(cuid())
  tenantId  String
  featureId String
  env       Environment
  enabled   Boolean     @default(false)
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

  strategy      EvaluationStrategy @default(BOOLEAN)
  strategyValue Json?

  // Relations
  tenant  Tenant  @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  feature Feature @relation(fields: [featureId], references: [id], onDelete: Cascade)

  @@index([tenantId, env])
  @@unique([tenantId, featureId, env])
}

model AuditLog {
  id        String   @id @default(cuid())
  tenantId  String
  actor     String
  action    String
  entity    String
  entityId  String
  diff      Json?
  createdAt DateTime @default(now())

  tenant Tenant @relation(fields: [tenantId], references: [id])

  @@index([tenantId, createdAt])
}